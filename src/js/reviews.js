import axios from 'axios';
import iziToast from 'izitoast';
import 'izitoast/dist/css/iziToast.min.css';
import Swiper from 'swiper';
import { Navigation, Mousewheel, Keyboard } from 'swiper/modules';

const prevButton = document.querySelector('.icon-left-arrow');
const nextButton = document.querySelector('.icon-right-arrow');
const reviewsCatalog = document.querySelector('.reviews-catalog');
const div = document.querySelector('.reviews-swiper');
const swiper = document.querySelector('.swiper');
const rSBN = document.querySelector('.reviews-swiper-button-next');

let allReviews = []; // –ú–∞—Å–∏–≤ –¥–ª—è –≤—Å—ñ—Ö –≤—ñ–¥–≥—É–∫—ñ–≤
let currentIndex = 0; // –ü–æ—Ç–æ—á–Ω–∏–π —ñ–Ω–¥–µ–∫—Å –≤—ñ–¥–≥—É–∫—ñ–≤
let cardsPerPage = 1; // –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞—Ä—Ç–æ–∫ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ

// üîπ –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞ —Å–µ–∫—Ü—ñ—î—é `reviews`
document.addEventListener('DOMContentLoaded', () => {
  const observer = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      if (entry.isIntersecting && entry.intersectionRatio >= 0.001) {
        // –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–∞—Ä—Ç–æ–∫ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ä–æ–∑–º—ñ—Ä—É –µ–∫—Ä–∞–Ω—É
        if (window.matchMedia('(max-width: 767px)').matches) {
          cardsPerPage = 1;
        } else if (window.matchMedia('(max-width: 1439px)').matches) {
          cardsPerPage = 2;
        } else {
          cardsPerPage = 4;
        }
        request(); // –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ —Å–µ—Ä–≤–µ—Ä–∞
        observer.disconnect(); // –ó—É–ø–∏–Ω—è—î–º–æ —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
      }
    });
  }, { threshold: [0.001] });

  observer.observe(document.querySelector('#reviews'));
});

nextButton.addEventListener('click', showNextCards);

// üîπ –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø–∏—Ç—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä
function httpRequest() {
  return axios.get('https://portfolio-js.b.goit.study/api/reviews');
}

// üîπ –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ä—Ç–∫–∏
function createCart(element) {
  return `
    <li data-info="${element._id}" class="swiper-slide reviews-list">
      <img class="reviews-list-avatar"
        src="${element.avatar_url}" alt="${element.author} reviews" />
      <h3 class="reviews-list-title">${element.author}</h3>
      <p class="reviews-list-text">${element.review}</p>
    </li>
  `;
}

// üîπ –§—É–Ω–∫—Ü—ñ—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —ñ–∑ —Å–µ—Ä–≤–µ—Ä–∞
async function request() {
  try {
    const serverInform = await httpRequest();
    
    if (serverInform.data.length === 0) {
      iziToast.error({ position: 'topRight', message: 'Not found!' });
      return;
    }

    allReviews = serverInform.data; // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤—Å—ñ –≤—ñ–¥–≥—É–∫–∏
    currentIndex = 0; // –°–∫–∏–¥–∞—î–º–æ —ñ–Ω–¥–µ–∫—Å
    showNextCards(); // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –∫–∞—Ä—Ç–∫–∏
  } catch (er) {
    iziToast.error({ position: 'topRight', message: 'Not found!' });
  }
}

// üîπ –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö –∫–∞—Ä—Ç–æ–∫
function showNextCards() {
  if (currentIndex >= allReviews.length) return; // –Ø–∫—â–æ –∫–∞—Ä—Ç–∫–∏ –∑–∞–∫—ñ–Ω—á–∏–ª–∏—Å—è - –Ω–µ –¥–æ–¥–∞—î–º–æ

  const nextCards = allReviews
    .slice(currentIndex, currentIndex + cardsPerPage)
    .map(createCart)
    .join('');

  reviewsCatalog.insertAdjacentHTML('beforeend', nextCards);
  currentIndex += cardsPerPage;

  observeCards(); // –î–æ–¥–∞—î–º–æ —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–ª—è –Ω–æ–≤–∏—Ö –∫–∞—Ä—Ç–æ–∫


  // üîπ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∞–±–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è `Swiper`
  if (!window.swiperInstance) {
    window.swiperInstance = new Swiper('.reviews-swiper', {
      slidesPerView: 1,
      modules: [Navigation, Mousewheel, Keyboard],
      navigation: {
        nextEl: '.reviews-swiper-button-next',
        prevEl: '.reviews-swiper-button-prev',
      },
      spaceBetween: 16,
      keyboard: { enabled: true },
      mousewheel: true,
      breakpoints: {
        768: { slidesPerView: 2 },
        1440: { slidesPerView: 4 },
      },
    });
  } else {
    window.swiperInstance.update();
  }
}

// üîπ –§—É–Ω–∫—Ü—ñ—è `observeCards()`
function observeCards() {
    const cards = document.querySelectorAll('.reviews-list'); // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –∫–∞—Ä—Ç–∫–∏
  
    const observer = new IntersectionObserver(entries => {
      let isCard1Visible = false; // –ß–∏ —î –∫–∞—Ä—Ç–∫–∞ id=1 —É –ø–æ–ª—ñ –∑–æ—Ä—É
      let isCard6Visible = false; // –ß–∏ —î –∫–∞—Ä—Ç–∫–∞ id=6 —É –ø–æ–ª—ñ –∑–æ—Ä—É
  
      entries.forEach(entry => {
        const cardId = entry.target.getAttribute('data-info'); // –û—Ç—Ä–∏–º—É—î–º–æ id –∫–∞—Ä—Ç–∫–∏
  
        if (entry.intersectionRatio >= 0.005) { // –í–∏–¥–∏–º—ñ—Å—Ç—å —Ö–æ—á–∞ –± 0.5%
          if (cardId === '1') isCard1Visible = true;
          if (cardId === '6') isCard6Visible = true;
        }
      });
  
      // –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ —Å—Ç–∏–ª—ñ –¥–æ prevButton
      if (isCard1Visible) {
        prevButton.classList.add('disable');
        prevButton.style.stroke = '#3B3B3B'; // –î–æ–¥–∞—î–º–æ stroke –¥–ª—è prevButton
        prevButton.style.border = '1px solid rgba(250, 250, 250, 0.2)'; // –î–æ–¥–∞—î–º–æ border –¥–ª—è prevButton
      } else {
        prevButton.classList.remove('disable');
        prevButton.style.stroke = '#FAFAFA'; // –í–∏–¥–∞–ª—è—î–º–æ stroke
        prevButton.style.border = ''; // –í–∏–¥–∞–ª—è—î–º–æ border
      }
  
      // –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ —Å—Ç–∏–ª—ñ –¥–æ nextButton
      if (isCard6Visible) {
        nextButton.classList.add('disable');
        nextButton.style.stroke = '#3B3B3B'; // –î–æ–¥–∞—î–º–æ stroke –¥–ª—è nextButton
        nextButton.style.border = '1px solid rgba(250, 250, 250, 0.2)'; // –î–æ–¥–∞—î–º–æ border –¥–ª—è nextButton
      } else {
        nextButton.classList.remove('disable');
        nextButton.style.stroke = '#FAFAFA'; // –í–∏–¥–∞–ª—è—î–º–æ stroke
        nextButton.style.border = ''; // –í–∏–¥–∞–ª—è—î–º–æ border
      }
  
    }, { threshold: 0.005 }); // –ü–æ—Ä—ñ–≥ –≤–∏–¥–∏–º–æ—Å—Ç—ñ 0.5%
  
    // –¢–µ–ø–µ—Ä —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—î–º–æ —Ç—ñ–ª—å–∫–∏ –∑–∞ –∫–∞—Ä—Ç–∫–∞–º–∏ –∑ id=1 —Ç–∞ id=6
    const card1 = document.querySelector('[data-info="1"]');
    const card6 = document.querySelector('[data-info="6"]');
  
    if (card1) observer.observe(card1);
    if (card6) observer.observe(card6);
  }
